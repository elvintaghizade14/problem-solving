1. Optimize & Solve Technique #1: Look for "BUD":
    - Bottlenecks - A bottleneck is a part of your algorithm that slows down the overall runtime
        * You have one-time work that slows down your algorithm
        * You have a chunk of work that's done repeatedly
    - Unnecessary work
    - Duplicated work

2. Optimize & Solve Technique #2: "DIY (Do It Yourself)"

3. Optimize & Solve Technique #3: "Simplify and Generalize"
    - simplify or tweak some constraint, such as the data type
    - solve this new simplified version of the problem
    - try to adapt it for the more complex version

4. Optimize & Solve Technique #4: "Base Case and Build"

5. Optimize & Solve Technique #5: "Data Structure Brainstorm"

6. Best Conceivable Runtime (BCR)
    - The best conceivable runtime is, literally, the best runtime you could conceive of a solution to a problem having.
      You can easily prove that there is no way you could beat the BCR.











